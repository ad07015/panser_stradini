//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InventoryDataAssembly.Inventory), "OrderItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InventoryDataAssembly.OrderItem), true)]
[assembly: EdmRelationshipAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_USERS_TABLE", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(InventoryDataAssembly.User), "OrderItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(InventoryDataAssembly.OrderItem), true)]

#endregion

namespace InventoryDataAssembly
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InventoryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InventoryEntities object using the connection string found in the 'InventoryEntities' section of the application configuration file.
        /// </summary>
        public InventoryEntities() : base("name=InventoryEntities", "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InventoryEntities object.
        /// </summary>
        public InventoryEntities(string connectionString) : base(connectionString, "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InventoryEntities object.
        /// </summary>
        public InventoryEntities(EntityConnection connection) : base(connection, "InventoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderItem> OrderItems
        {
            get
            {
                if ((_OrderItems == null))
                {
                    _OrderItems = base.CreateObjectSet<OrderItem>("OrderItems");
                }
                return _OrderItems;
            }
        }
        private ObjectSet<OrderItem> _OrderItems;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderItems(OrderItem orderItem)
        {
            base.AddObject("OrderItems", orderItem);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Inventory CreateInventory(global::System.String id)
        {
            Inventory inventory = new Inventory();
            inventory.ID = id;
            return inventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PRICE
        {
            get
            {
                return _PRICE;
            }
            set
            {
                OnPRICEChanging(value);
                ReportPropertyChanging("PRICE");
                _PRICE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRICE");
                OnPRICEChanged();
            }
        }
        private Nullable<global::System.Double> _PRICE;
        partial void OnPRICEChanging(Nullable<global::System.Double> value);
        partial void OnPRICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> INSTOCK
        {
            get
            {
                return _INSTOCK;
            }
            set
            {
                OnINSTOCKChanging(value);
                ReportPropertyChanging("INSTOCK");
                _INSTOCK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("INSTOCK");
                OnINSTOCKChanged();
            }
        }
        private Nullable<global::System.Int32> _INSTOCK;
        partial void OnINSTOCKChanging(Nullable<global::System.Int32> value);
        partial void OnINSTOCKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RESERVED
        {
            get
            {
                return _RESERVED;
            }
            set
            {
                OnRESERVEDChanging(value);
                ReportPropertyChanging("RESERVED");
                _RESERVED = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RESERVED");
                OnRESERVEDChanged();
            }
        }
        private Nullable<global::System.Int32> _RESERVED;
        partial void OnRESERVEDChanging(Nullable<global::System.Int32> value);
        partial void OnRESERVEDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "OrderItem")]
        public EntityCollection<OrderItem> ORDER_ITEM_TABLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "OrderItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "OrderItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="OrderItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static OrderItem CreateOrderItem(global::System.Int32 id)
        {
            OrderItem orderItem = new OrderItem();
            orderItem.ID = id;
            return orderItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> USER_FK
        {
            get
            {
                return _USER_FK;
            }
            set
            {
                OnUSER_FKChanging(value);
                ReportPropertyChanging("USER_FK");
                _USER_FK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("USER_FK");
                OnUSER_FKChanged();
            }
        }
        private Nullable<global::System.Int32> _USER_FK;
        partial void OnUSER_FKChanging(Nullable<global::System.Int32> value);
        partial void OnUSER_FKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INVENTORY_FK
        {
            get
            {
                return _INVENTORY_FK;
            }
            set
            {
                OnINVENTORY_FKChanging(value);
                ReportPropertyChanging("INVENTORY_FK");
                _INVENTORY_FK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INVENTORY_FK");
                OnINVENTORY_FKChanged();
            }
        }
        private global::System.String _INVENTORY_FK;
        partial void OnINVENTORY_FKChanging(global::System.String value);
        partial void OnINVENTORY_FKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> COUNT
        {
            get
            {
                return _COUNT;
            }
            set
            {
                OnCOUNTChanging(value);
                ReportPropertyChanging("COUNT");
                _COUNT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("COUNT");
                OnCOUNTChanged();
            }
        }
        private Nullable<global::System.Int32> _COUNT;
        partial void OnCOUNTChanging(Nullable<global::System.Int32> value);
        partial void OnCOUNTChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory")]
        public Inventory INVENTORY_TABLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> INVENTORY_TABLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("InventoryModel.FK_ORDER_ITEM_TABLE_INVENTORY_TABLE", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_USERS_TABLE", "User")]
        public User USERS_TABLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> USERS_TABLEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InventoryModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static User CreateUser(global::System.Int32 id)
        {
            User user = new User();
            user.ID = id;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FIRST_NAME
        {
            get
            {
                return _FIRST_NAME;
            }
            set
            {
                OnFIRST_NAMEChanging(value);
                ReportPropertyChanging("FIRST_NAME");
                _FIRST_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FIRST_NAME");
                OnFIRST_NAMEChanged();
            }
        }
        private global::System.String _FIRST_NAME;
        partial void OnFIRST_NAMEChanging(global::System.String value);
        partial void OnFIRST_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LAST_NAME
        {
            get
            {
                return _LAST_NAME;
            }
            set
            {
                OnLAST_NAMEChanging(value);
                ReportPropertyChanging("LAST_NAME");
                _LAST_NAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LAST_NAME");
                OnLAST_NAMEChanged();
            }
        }
        private global::System.String _LAST_NAME;
        partial void OnLAST_NAMEChanging(global::System.String value);
        partial void OnLAST_NAMEChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InventoryModel", "FK_ORDER_ITEM_TABLE_USERS_TABLE", "OrderItem")]
        public EntityCollection<OrderItem> ORDER_ITEM_TABLE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderItem>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "OrderItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderItem>("InventoryModel.FK_ORDER_ITEM_TABLE_USERS_TABLE", "OrderItem", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
